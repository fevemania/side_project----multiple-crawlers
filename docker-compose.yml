version: '3'
services:
   #apache:
   #    image: httpd
   #    ports:
   #        - 80:80
   #    logging:
   #        driver: fluentd
   #        options:
   #            fluentd-address: localhost:9880
   #            tag: s3.apache.access
    mysql:
        image: mysql:5.7
        hostname: mysql
        restart: always
        environment:
            MYSQL_DATABASE: 'db'
            MYSQL_USER: 'admin'
            MYSQL_PASSWORD: 'mypass'
            MYSQL_ROOT_PASSWORD: 'mypass'
        ports:
            - 3306:3306
        volumes:
            - mysql:/var/lib/mysql
        command: ['mysqld', '--character-set-server=utf8mb4', '--collation-server=utf8mb4_unicode_ci']

    rabbitmq:
        hostname: rabbitmq
        image: rabbitmq
        restart: always
        environment:
            - RABBITMQ_DEFAULT_USER=admin
            - RABBITMQ_DEFAULT_PASS=mypass
        ports:
            - 5672:5672
        labels:
            NAME: rabbitmq
        volumes:
            - rabbitmq:/var/lib/rabbitmq

    redis:
        image: redis:alpine
        restart: always
        ports:
            - 6379:6379
        volumes:
            - redis:/var/lib/redis

    fluentd:
        build: ./conf/fluentd
        ports:
            - 9880:9880
          #      - 24224:24224/udp
    
    category_worker:
        build: 
            context: .
            dockerfile: ./conf/category_worker/Dockerfile
        depends_on:
            - rabbitmq
        environment:
            RABBIT_HOST: rabbitmq
            REDIS_HOST: redis
        command: ["./wait-for-it.sh", "-t", "30", "rabbitmq:5672", "--", "python", "-u", "category_worker.py"]

    product_worker:
        build: 
            context: .
            dockerfile: ./conf/product_worker/Dockerfile
        depends_on:
            - rabbitmq
            - fluentd
        environment:
            RABBIT_HOST: rabbitmq
            REDIS_HOST: redis
            FLUENTD_HOST: fluentd
        command: ["./wait-for-it.sh", "-t", "30", "rabbitmq:5672", "--", "python", "-u", "product_worker.py"]

volumes:
    rabbitmq:
    redis:
    mysql:

 #minio:
 #  image: minio/minio:RELEASE.2019-10-12T01-39-57Z
 #  volumes:
 #    - minio:/data
 #  ports:
 #    - 9000:9000
 #  environment:
 #    MINIO_ACCESS_KEY: minio
 #    MINIO_SECRET_KEY: minio123
 #  command: server /data
 #  healthcheck:
 #    test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
 #    interval: 30s
 #    timeout: 20s
 #    retries: 3
